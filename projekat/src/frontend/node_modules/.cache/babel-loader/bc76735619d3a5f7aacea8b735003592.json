{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  align: \"center\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"Forgot your password?\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.username = $event),\n    placeholder: \"username\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.username]]), _hoisted_2, _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.password = $event),\n    placeholder: \"password\",\n    type: \"password\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.password]]), _hoisted_4, _hoisted_5, _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.login && $options.login(...args))\n  }, \"Login\"), _createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, [_createVNode(_component_router_link, {\n    to: \"/forgotPasswordPage\"\n  }, {\n    default: _withCtx(() => [_hoisted_6]),\n    _: 1\n    /* STABLE */\n\n  })])])])]);\n}","map":{"version":3,"mappings":";;AAGSA,OAAK,EAAC;;;gCAETC,oBAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM;AAAA;AAAN;;gCACAA,oBAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM;AAAA;AAAN;;gCAEAA,oBAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM;AAAA;AAAN;;gCACAA,oBAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM;AAAA;AAAN;;iDAI0C;;;;;uBAZ9CC,oBAiBM,KAjBN,EAiBM,IAjBN,EAiBM,CAfJD,oBAaM,KAbN,cAaM,iBAZJA,oBAAmD,OAAnD,EAAmD;+DAAnCE,gBAAQC,OAA2B;AAAzBC,eAAW,EAAC;AAAa,GAAnD;;AAAA,oBAAgBF,gBAYZ,EAXJG,UAWI,EAVJC,UAUI,kBATJN,oBAAmE,OAAnE,EAAmE;+DAAnDE,gBAAQC,OAA2C;AAAzCC,eAAW,EAAC,UAA6B;AAAlBG,QAAI,EAAC;AAAa,GAAnE;;AAAA,oBAAgBL,gBASZ,EARJM,UAQI,EAPJC,UAOI,EANJT,oBAAqC,QAArC,EAAqC;AAA5BU,WAAK,yCAAEC,yCAAF;AAAuB,GAArC,EAAuB,OAAvB,CAMI,EALJX,oBAIM,KAJN,EAIM,IAJN,EAIM,CAHJA,oBAEI,GAFJ,EAEI,IAFJ,EAEI,CADFY,aAAyEC,sBAAzE,EAAyE;AAA5DC,MAAE,EAAC;AAAyD,GAAzE,EAAqC;sBAAC,MAAqB,aAAtB;;;;AAAA,GAArC,CACE,CAFJ,CAGI,CAJN,CAKI,CAbN,CAeI,CAjBN","names":["align","_createElementVNode","_createElementBlock","_ctx","$event","placeholder","_hoisted_2","_hoisted_3","type","_hoisted_4","_hoisted_5","onClick","$options","_createVNode","_component_router_link","to"],"sourceRoot":"","sources":["C:\\Users\\draga\\OneDrive\\Dokumenti\\MRS-ISA-PROJEKAT\\mrs-isa-projekat\\projekat\\src\\frontend\\src\\components\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    \r\n    <div align=\"center\">\r\n      <input v-model=\"username\" placeholder=\"username\" />\r\n      <br />\r\n      <br />\r\n      <input v-model=\"password\" placeholder=\"password\" type=\"password\" />\r\n      <br />\r\n      <br />\r\n      <button @click=\"login\">Login</button>\r\n      <div>\r\n        <p>\r\n          <router-link to=\"/forgotPasswordPage\">Forgot your password?</router-link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from \"axios\"\r\nexport default {\r\n  data: () => {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n  },\r\n    mounted(){\r\n    this.$root.signIn=false;\r\n    \r\n  },\r\n  methods:{\r\n    login(){\r\n      var regex=/^[0-9A-Za-z]+$/;\r\n      if(this.username.length<3 || this.username.length > 20){\r\n        this.$toast.error(\"Username must be between 3-20 characters\");\r\n        return;\r\n      }\r\n      if(!regex.test(this.username)){\r\n        this.$toast.error(\"Username must only contain letters and numbers\");\r\n        return;\r\n      }\r\n      if(this.password.length<5 || this.password.length > 20){\r\n        this.$toast.error(\"Password must be between 5-20 characters\");\r\n        return;\r\n      }\r\n      if(!regex.test(this.password)){\r\n        this.$toast.error(\"Password must only contain letters and numbers\");\r\n        return;\r\n      }\r\n      const loginHeaders ={\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n      };\r\n      const body = {\r\n      'username': this.username,\r\n      'password': this.password\r\n      };\r\n      \r\n      axios.post(\"/api/auth/login\",body,loginHeaders).then(response =>{        \r\n        this.$root.accessToken=response.data.accessToken;\r\n        this.$root.signedIn=true;\r\n       \r\n        localStorage.setItem(\"jwt\",response.data.accessToken);\r\n        this.$toast.success(\"Login successfull\");   \r\n \r\n        axios.get(\"/api/users/loggedUser\",{ headers: {\"Authorization\" : `Bearer ${localStorage.getItem(\"jwt\")}`} })\r\n            .then(response => {\r\n              this.$root.loggedUser=response.data\r\n              this.$root.accountType = response.data.accountType;\r\n              console.log(response.data.accountType)\r\n            });\r\n        axios.get(\"/api/users/loggedUser/picture\",{ headers: {\"Authorization\" : `Bearer ${localStorage.getItem(\"jwt\")}`} }).then(response => (this.$root.loggedPicture=response.data));\r\n        this.$router.push(\"/\");  \r\n      \r\n      }).catch((error) => {\r\n        if(error.response.status === 404)\r\n          this.$toast.error(\"Account awaiting verification\");\r\n        else\r\n          this.$toast.error(\"Invalid Credentials\");\r\n        this.$root.signedIn=false;\r\n        this.$root.accessToken=null;\r\n        localStorage.setItem(\"jwt\",null);\r\n        console.log( error);\r\n      });\r\n    \r\n      \r\n    }\r\n\r\n  \r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}