{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"App\",\n\n  data() {\n    return {\n      signIn: true,\n      signUp: true,\n      signedIn: false,\n      loggedUser: {},\n      loggedPicture: null,\n      accessToken: null,\n      accountType: \"\"\n    };\n  },\n\n  mounted() {\n    if (localStorage.getItem(\"jwt\") != \"null\") {\n      // this.signIn=true;\n      // this.signUp=true;\n      // this.signedIn=false;\n      axios.get(\"/api/users/loggedUser\", {\n        headers: {\n          \"Authorization\": `Bearer ${localStorage.getItem(\"jwt\")}`\n        }\n      }).then(response => {\n        this.loggedUser = response.data;\n        this.accountType = response.data.accountType;\n        this.signIn = false;\n        this.signUp = false;\n        this.signedIn = true;\n      });\n      axios.get(\"/api/users/loggedUser/picture\", {\n        headers: {\n          \"Authorization\": `Bearer ${localStorage.getItem(\"jwt\")}`\n        }\n      }).then(response => this.loggedPicture = response.data);\n    } else {\n      this.signIn = true;\n      this.signUp = true;\n      this.signedIn = false;\n    }\n  },\n\n  methods: {\n    jumpToHomePage() {\n      this.$router.push(\"/\");\n      this.signIn = true;\n      this.signUp = true;\n    },\n\n    jmpToRegistrationPage() {\n      this.$router.push(\"/registrationPage\");\n    },\n\n    jmpToLoginPage() {\n      this.$router.push(\"/loginPage\");\n    },\n\n    jmpToUserProfile() {\n      if (this.loggedUser.accountType === \"CLIENT\") {\n        this.$router.push({\n          name: \"clientProfile\"\n        });\n      } else if (this.loggedUser.accountType === \"VH_OWNER\") {\n        this.$router.push({\n          name: \"ownerHome\"\n        });\n      } else if (this.loggedUser.accountType === \"ADMIN\") {\n        this.$router.push({\n          name: \"adminInfo\"\n        });\n      }\n    },\n\n    logout() {\n      this.accessToken = null;\n      localStorage.setItem(\"jwt\", null);\n      window.location.href = 'http://localhost:3000/';\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAuBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;AACbC,MAAI,EAAE,KADO;;AAEbC,MAAI,GAAG;AACL,WAAO;AACLC,YAAM,EAAE,IADH;AAELC,YAAM,EAAE,IAFH;AAGLC,cAAQ,EAAE,KAHL;AAILC,gBAAU,EAAE,EAJP;AAKLC,mBAAa,EAAC,IALT;AAMLC,iBAAW,EAAE,IANR;AAOLC,iBAAW,EAAE;AAPR,KAAP;AASD,GAZY;;AAabC,SAAO,GAAE;AACN,QAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,KAA6B,MAAhC,EAAuC;AACpC;AACA;AACA;AAEAZ,WAAK,CAACa,GAAN,CAAU,uBAAV,EAAkC;AAAEC,eAAO,EAAE;AAAC,2BAAmB,UAASH,YAAY,CAACC,OAAb,CAAqB,KAArB,CAA4B;AAAzD;AAAX,OAAlC,EAA4GG,IAA5G,CAAiHC,QAAO,IAAK;AAC3H,aAAKV,UAAL,GAAgBU,QAAQ,CAACd,IAAzB;AACA,aAAKO,WAAL,GAAmBO,QAAQ,CAACd,IAAT,CAAcO,WAAjC;AACA,aAAKN,MAAL,GAAY,KAAZ;AACA,aAAKC,MAAL,GAAY,KAAZ;AACA,aAAKC,QAAL,GAAc,IAAd;AAED,OAPD;AAQAL,WAAK,CAACa,GAAN,CAAU,+BAAV,EAA0C;AAAEC,eAAO,EAAE;AAAC,2BAAmB,UAASH,YAAY,CAACC,OAAb,CAAqB,KAArB,CAA4B;AAAzD;AAAX,OAA1C,EAAoHG,IAApH,CAAyHC,QAAO,IAAM,KAAKT,aAAL,GAAmBS,QAAQ,CAACd,IAAlK;AACD,KAdF,MAcM;AACH,WAAKC,MAAL,GAAY,IAAZ;AACA,WAAKC,MAAL,GAAY,IAAZ;AACA,WAAKC,QAAL,GAAc,KAAd;AACF;AACH,GAjCY;;AAkCbY,SAAO,EAAC;AACNC,kBAAc,GAAE;AACd,WAAKC,OAAL,CAAaC,IAAb,CAAkB,GAAlB;AACA,WAAKjB,MAAL,GAAY,IAAZ;AACA,WAAKC,MAAL,GAAY,IAAZ;AACD,KALK;;AAMNiB,yBAAqB,GAAE;AACrB,WAAKF,OAAL,CAAaC,IAAb,CAAkB,mBAAlB;AACD,KARK;;AASNE,kBAAc,GAAE;AACd,WAAKH,OAAL,CAAaC,IAAb,CAAkB,YAAlB;AACD,KAXK;;AAYNG,oBAAgB,GAAE;AAChB,UAAG,KAAKjB,UAAL,CAAgBG,WAAhB,KAA8B,QAAjC,EAA0C;AACxC,aAAKU,OAAL,CAAaC,IAAb,CAAkB;AAACnB,cAAI,EAAE;AAAP,SAAlB;AACD,OAFD,MAEM,IAAI,KAAKK,UAAL,CAAgBG,WAAhB,KAA8B,UAAlC,EAA6C;AACjD,aAAKU,OAAL,CAAaC,IAAb,CAAkB;AAACnB,cAAI,EAAE;AAAP,SAAlB;AACD,OAFK,MAEA,IAAG,KAAKK,UAAL,CAAgBG,WAAhB,KAA8B,OAAjC,EAAyC;AAC9C,aAAKU,OAAL,CAAaC,IAAb,CAAkB;AAACnB,cAAI,EAAE;AAAP,SAAlB;AACD;AACD,KApBK;;AAqBNuB,UAAM,GAAE;AACN,WAAKhB,WAAL,GAAiB,IAAjB;AACAG,kBAAY,CAACc,OAAb,CAAqB,KAArB,EAA2B,IAA3B;AACAC,YAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,wBAAvB;AAEF;;AA1BM;AAlCK,CAAf","names":["axios","name","data","signIn","signUp","signedIn","loggedUser","loggedPicture","accessToken","accountType","mounted","localStorage","getItem","get","headers","then","response","methods","jumpToHomePage","$router","push","jmpToRegistrationPage","jmpToLoginPage","jmpToUserProfile","logout","setItem","window","location","href"],"sourceRoot":"","sources":["C:\\Users\\draga\\OneDrive\\Dokumenti\\MRS-ISA-PROJEKAT\\mrs-isa-projekat\\projekat\\src\\frontend\\src\\App.vue"],"sourcesContent":["<template>\r\n  <nav class=\"navbar\" >\r\n    <div class=\"navbar-top\" style=\"min-width: 1000px\">\r\n      <div class=\"nav-left\">\r\n        <h4 class=\"brand\" @click=\"jumpToHomePage()\">Renting Buddy</h4>\r\n      </div>\r\n      <div class=\"nav-right\" v-if=\"this.signedIn==false\">\r\n        <button type=\"button\" v-if=\"signIn\" @click=\"jmpToLoginPage()\" class=\"custom-btn button-primary\">Sign in</button>\r\n        <button type=\"button\"  v-if=\"signUp\" @click=\"jmpToRegistrationPage()\"  style=\"margin-right: 0\" class=\"custom-btn button-primary\">Register</button>\r\n      </div>\r\n      <div class=\"nav-right\" v-else>\r\n        <img v-bind:src=\"'data:image/jpeg;base64,' + loggedPicture\" style=\"width: 50px; height: 40px;\" @click=\"jmpToUserProfile()\">\r\n        <!--        <router-link v-if=\"loggedUser.accountType==='CLIENT'\" class=\"link-light text-decoration-none\" :to=\"{name: 'clientProfile'}\">{{loggedUser.username}}</router-link>-->\r\n        <label class=\"link-light text-decoration-none\" @click=\"jmpToUserProfile()\">{{loggedUser.username}}</label>\r\n        <button type=\"button\"  @click=\"logout()\" class=\"custom-btn button-outline\" >Logout</button>\r\n      </div>\r\n    </div>\r\n    \r\n  </nav>\r\n  <router-view></router-view>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\"\r\nexport default {\r\n  name: \"App\",\r\n  data() {\r\n    return {\r\n      signIn: true,\r\n      signUp: true,\r\n      signedIn: false,\r\n      loggedUser: {},\r\n      loggedPicture:null,\r\n      accessToken: null,\r\n      accountType: \"\"\r\n    }\r\n  }, \r\n  mounted(){    \r\n     if(localStorage.getItem(\"jwt\")!=\"null\"){\r\n        // this.signIn=true;\r\n        // this.signUp=true;\r\n        // this.signedIn=false;\r\n     \r\n        axios.get(\"/api/users/loggedUser\",{ headers: {\"Authorization\" : `Bearer ${localStorage.getItem(\"jwt\")}`} }).then(response => {\r\n          this.loggedUser=response.data;\r\n          this.accountType = response.data.accountType;\r\n          this.signIn=false;\r\n          this.signUp=false;\r\n          this.signedIn=true; \r\n\r\n        });\r\n        axios.get(\"/api/users/loggedUser/picture\",{ headers: {\"Authorization\" : `Bearer ${localStorage.getItem(\"jwt\")}`} }).then(response => (this.loggedPicture=response.data));\r\n      }else{\r\n        this.signIn=true;\r\n        this.signUp=true;\r\n        this.signedIn=false;\r\n      }\r\n  },   \r\n  methods:{\r\n    jumpToHomePage(){\r\n      this.$router.push(\"/\");\r\n      this.signIn=true;\r\n      this.signUp=true;\r\n    },\r\n    jmpToRegistrationPage(){\r\n      this.$router.push(\"/registrationPage\")\r\n    },\r\n    jmpToLoginPage(){\r\n      this.$router.push(\"/loginPage\")\r\n    },\r\n    jmpToUserProfile(){\r\n      if(this.loggedUser.accountType===\"CLIENT\"){\r\n        this.$router.push({name: \"clientProfile\"});\r\n      }else if (this.loggedUser.accountType===\"VH_OWNER\"){\r\n        this.$router.push({name: \"ownerHome\"});\r\n      }else if(this.loggedUser.accountType===\"ADMIN\"){\r\n       this.$router.push({name: \"adminInfo\"})\r\n      }\r\n    },\r\n    logout(){\r\n      this.accessToken=null;\r\n      localStorage.setItem(\"jwt\",null);          \r\n      window.location.href = 'http://localhost:3000/';\r\n     \r\n    }\r\n  }\r\n  \r\n}\r\n</script>\r\n\r\n<style>\r\n\r\nnav {\r\n  background: #00587a;\r\n  min-height: 54px;\r\n}\r\n\r\n.brand {\r\n  color: #ffffff;\r\n  margin-top: auto;\r\n  margin-bottom: 0;\r\n  font-weight: bold;\r\n}\r\n\r\n.navbar-top {\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: auto;\r\n  width: 60%;\r\n  padding-bottom: 0;\r\n  min-width: 500px;\r\n  }\r\n\r\n.navbar-top button {\r\n  margin-inline: 10px;\r\n  }\r\n\r\n.brand:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}