{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  align: \"center\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode();\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.email = $event),\n    placeholder: \"E-mail\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.email]]), _hoisted_3, _hoisted_4, _hoisted_5, _createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.sendResetPasswordMail())\n  }, \"Send reset password email\")]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;gCACTC,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;;gCACyDA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gCAAIA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;uBAF/DC,oBAIM,KAJN,cAIM,CAHJC,UAGI,kBAFJF,oBAAwD,OAAxD,EAAwD;AAAjDG,QAAI,EAAC,MAA4C;+DAA5BC,aAAKC,OAAuB;AAArBC,eAAW,EAAC;AAAS,GAAxD;;AAAA,oBAA4BF,aAExB,cAFqDG,UAErD,EAFyDC,UAEzD,EADJR,oBAAmG,QAAnG,EAAmG;AAA3FS,SAAK,EAAC,iBAAqF;AAAlEC,WAAK,sCAAEC,gCAAF;AAA6D,GAAnG,EAAiE,2BAAjE,CACI,CAJN","names":["align","_createElementVNode","_createElementBlock","_hoisted_2","type","_ctx","$event","placeholder","_hoisted_4","_hoisted_5","class","onClick","$options"],"sourceRoot":"","sources":["C:\\Users\\draga\\OneDrive\\Dokumenti\\MRS-ISA-PROJEKAT\\mrs-isa-projekat\\projekat\\src\\frontend\\src\\components\\ForgotPasswordPage.vue"],"sourcesContent":["<template>\r\n  <div align='center'>\r\n    <br>\r\n    <input type=\"text\" v-model=\"email\" placeholder=\"E-mail\"> <br><br>\r\n    <button class=\"btn btn-primary\" @click=\"sendResetPasswordMail()\">Send reset password email</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\"\r\nexport default {\r\n  name: \"forgotPasswordPage\",\r\n  data: () => {\r\n    return {\r\n      email: \"\",\r\n     \r\n    };\r\n  },\r\n  mounted(){\r\n    this.$root.signIn= true;\r\n    this.$root.signUp= true;\r\n    this.$root.signedIn=false;\r\n    this.accessToken=null;\r\n    localStorage.setItem(\"jwt\",null);\r\n\r\n  },\r\n  methods:{\r\n    sendResetPasswordMail(){\r\n      if (this.email.length<5 || this.validateEmail(this.email)==false) {\r\n         this.$toast.error(\"Invalid email\");\r\n         return;     \r\n      }\r\n      this.email.toLowerCase();\r\n      axios.get(`/api/auth/sendResetPassword/${this.email}`).then(response => {\r\n        \r\n        if(response.data==true){\r\n          this.$toast.success(\"Reset password mail successfully sent\");\r\n          this.$router.push(\"/\");\r\n        }else{\r\n          this.$toast.error(\"Error\");\r\n        }\r\n      })\r\n    },\r\n    validateEmail(email){\r\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;      \r\n      return re.test(email);\r\n\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}