{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"forgotPasswordPage\",\n  data: () => {\n    return {\n      email: \"\"\n    };\n  },\n\n  mounted() {\n    this.$root.signIn = true;\n    this.$root.signUp = true;\n    this.$root.signedIn = false;\n    this.accessToken = null;\n    localStorage.setItem(\"jwt\", null);\n  },\n\n  methods: {\n    sendResetPasswordMail() {\n      if (this.email.length < 5 || this.validateEmail(this.email) == false) {\n        this.$toast.error(\"Invalid email\");\n        return;\n      }\n\n      this.email.toLowerCase();\n      axios.get(`/api/auth/sendResetPassword/${this.email}`).then(response => {\n        if (response.data == true) {\n          this.$toast.success(\"Reset password mail successfully sent\");\n          this.$router.push(\"/\");\n        } else {\n          this.$toast.error(\"Error\");\n        }\n      });\n    },\n\n    validateEmail(email) {\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AASA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;AACbC,MAAI,EAAE,oBADO;AAEbC,MAAI,EAAE,MAAM;AACV,WAAO;AACLC,WAAK,EAAE;AADF,KAAP;AAID,GAPY;;AAQbC,SAAO,GAAE;AACP,SAAKC,KAAL,CAAWC,MAAX,GAAmB,IAAnB;AACA,SAAKD,KAAL,CAAWE,MAAX,GAAmB,IAAnB;AACA,SAAKF,KAAL,CAAWG,QAAX,GAAoB,KAApB;AACA,SAAKC,WAAL,GAAiB,IAAjB;AACAC,gBAAY,CAACC,OAAb,CAAqB,KAArB,EAA2B,IAA3B;AAED,GAfY;;AAgBbC,SAAO,EAAC;AACNC,yBAAqB,GAAE;AACrB,UAAI,KAAKV,KAAL,CAAWW,MAAX,GAAkB,CAAlB,IAAuB,KAAKC,aAAL,CAAmB,KAAKZ,KAAxB,KAAgC,KAA3D,EAAkE;AAC/D,aAAKa,MAAL,CAAYC,KAAZ,CAAkB,eAAlB;AACA;AACH;;AACA,WAAKd,KAAL,CAAWe,WAAX;AACAlB,WAAK,CAACmB,GAAN,CAAW,+BAA8B,KAAKhB,KAAM,EAApD,EAAuDiB,IAAvD,CAA4DC,QAAO,IAAK;AAEtE,YAAGA,QAAQ,CAACnB,IAAT,IAAe,IAAlB,EAAuB;AACrB,eAAKc,MAAL,CAAYM,OAAZ,CAAoB,uCAApB;AACA,eAAKC,OAAL,CAAaC,IAAb,CAAkB,GAAlB;AACD,SAHD,MAGK;AACH,eAAKR,MAAL,CAAYC,KAAZ,CAAkB,OAAlB;AACF;AACD,OARD;AASD,KAhBK;;AAiBNF,iBAAa,CAACZ,KAAD,EAAO;AAClB,UAAIsB,EAAC,GAAI,uJAAT;AACA,aAAOA,EAAE,CAACC,IAAH,CAAQvB,KAAR,CAAP;AAED;;AArBK;AAhBK,CAAf","names":["axios","name","data","email","mounted","$root","signIn","signUp","signedIn","accessToken","localStorage","setItem","methods","sendResetPasswordMail","length","validateEmail","$toast","error","toLowerCase","get","then","response","success","$router","push","re","test"],"sourceRoot":"","sources":["C:\\Users\\draga\\OneDrive\\Dokumenti\\MRS-ISA-PROJEKAT\\mrs-isa-projekat\\projekat\\src\\frontend\\src\\components\\ForgotPasswordPage.vue"],"sourcesContent":["<template>\r\n  <div align='center'>\r\n    <br>\r\n    <input type=\"text\" v-model=\"email\" placeholder=\"E-mail\"> <br><br>\r\n    <button class=\"btn btn-primary\" @click=\"sendResetPasswordMail()\">Send reset password email</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\"\r\nexport default {\r\n  name: \"forgotPasswordPage\",\r\n  data: () => {\r\n    return {\r\n      email: \"\",\r\n     \r\n    };\r\n  },\r\n  mounted(){\r\n    this.$root.signIn= true;\r\n    this.$root.signUp= true;\r\n    this.$root.signedIn=false;\r\n    this.accessToken=null;\r\n    localStorage.setItem(\"jwt\",null);\r\n\r\n  },\r\n  methods:{\r\n    sendResetPasswordMail(){\r\n      if (this.email.length<5 || this.validateEmail(this.email)==false) {\r\n         this.$toast.error(\"Invalid email\");\r\n         return;     \r\n      }\r\n      this.email.toLowerCase();\r\n      axios.get(`/api/auth/sendResetPassword/${this.email}`).then(response => {\r\n        \r\n        if(response.data==true){\r\n          this.$toast.success(\"Reset password mail successfully sent\");\r\n          this.$router.push(\"/\");\r\n        }else{\r\n          this.$toast.error(\"Error\");\r\n        }\r\n      })\r\n    },\r\n    validateEmail(email){\r\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;      \r\n      return re.test(email);\r\n\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}