{"ast":null,"code":"import axios from \"axios\";\nimport Slider from '@vueform/slider';\nexport default {\n  name: \"HomePage\",\n  components: {\n    Slider\n  },\n\n  data() {\n    return {\n      publicPath: process.env.BASE_URL,\n      entities: [],\n      selectedEntity: {},\n      selectedRows: [],\n      people: 0,\n      currentPage: 0,\n      displayCurrentPage: 0,\n      maximumPage: null,\n      groupBy: 5,\n      price: [0, 1000],\n      availabilityInterval: null,\n      filterData: {\n        \"type\": \"vacationHouses\",\n        \"name\": \"\",\n        \"address\": \"\",\n        \"start\": null,\n        \"end\": null,\n        \"people\": 0,\n        \"priceMin\": 0,\n        \"priceMax\": 100\n      },\n      sortType: 0,\n      //represents type of sort, 0 name desc, 1 name asc, 2 price asc, 3 price desc\n      nameFilter: \"\",\n      addressFilter: \"\",\n      selected: false,\n      toDisplay: 0,\n      displayType: 0 //represents type of renting entity, 0 vac houses, 1 ships , 2 fishing classes\n\n    };\n  },\n\n  mounted() {\n    // const name=\"\";\n    // const address=\"\";\n    // const start=new Date(2022,3,1,23,0);\n    // const end=new Date(2022,7,8,15,0);\n    // const people=8;\n    // const priceMin=40;\n    // const priceMax=800;\n    // console.log(start.toISOString());\n    // console.log(end.toISOString());\n    axios.get(`/api/vacationHouses/anyUser/?page=${this.currentPage}&size=5&sort=name,ASC`).then(response => this.entities = response.data); //axios.get(\"api/fishingClasses/all\").then(response => this.fishingClasses = response.data);\n    //axios.get(\"api/ships/all\").then(response => this.ships = response.data);\n  },\n\n  methods: {\n    formatRange(dates) {\n      let from = dates[0];\n      let to = dates[1];\n\n      if (from == null) {\n        from = new Date();\n      }\n\n      const dayFrom = from.getDate();\n      const monthFrom = from.getMonth() + 1;\n      const yearFrom = from.getFullYear();\n      const hourFrom = from.getHours();\n      const minuteFrom = from.getMinutes();\n\n      if (to == null) {\n        to = new Date();\n      }\n\n      const dayTo = to.getDate();\n      const monthTo = to.getMonth() + 1;\n      const yearTo = to.getFullYear();\n      const hourTo = to.getHours();\n      const minuteTo = to.getMinutes();\n      return `${dayFrom}.${monthFrom}.${yearFrom} ${hourFrom}:${minuteFrom} - ${dayTo}.${monthTo}.${yearTo} ${hourTo}:${minuteTo}`;\n    },\n\n    selectEntity(entity) {\n      this.selectedEntity = entity;\n      this.selected = true;\n    },\n\n    previousPage() {\n      if (this.currentPage - 1 <= 0) {\n        this.currentPage = 0;\n      } else {\n        this.currentPage = this.currentPage - 1;\n      }\n\n      this.search(false);\n    },\n\n    nextPage() {\n      this.currentPage = this.currentPage + 1;\n      this.search(false);\n    },\n\n    generateUrl() {\n      let url = \"api/\" + this.filterData.type + \"/anyUser/?\";\n\n      if (this.filterData.name != \"\") {\n        url = url + \"&name=\" + this.filterData.name;\n      }\n\n      if (this.filterData.address != \"\") {\n        url = url + \"&address=\" + this.filterData.address;\n      }\n\n      if (this.filterData.start != null) {\n        url = url + \"&start=\" + this.filterData.start;\n      }\n\n      if (this.filterData.end != null) {\n        url = url + \"&end=\" + this.filterData.end;\n      }\n\n      url = url + \"&people=\" + this.filterData.people + \"&priceMin=\" + this.filterData.priceMin + \"&priceMax=\" + this.filterData.priceMax + \"&page=\" + this.currentPage + \"&size=\" + this.groupBy + this.getSortType();\n      return url;\n    },\n\n    getSortType() {\n      //0 name desc, 1 name asc, 2 price asc, 3 price desc\n      //\"&sort=name,ASC\"\n      if (this.sortType == 0) {\n        return \"&sort=name,DESC\";\n      } else if (this.sortType == 1) {\n        return \"&sort=name,ASC\";\n      } else if (this.sortType == 3) {\n        return \"&sort=priceList,ASC\";\n      } else {\n        return \"&sort=priceList,DESC\";\n      }\n    },\n\n    getType() {\n      if (this.toDisplay == 0) {\n        return \"vacationHouses\";\n      } else if (this.toDisplay == 1) {\n        return \"ships\";\n      } else {\n        return \"fishingClasses\";\n      }\n    },\n\n    search(fromButton) {\n      if (fromButton) {\n        this.filterData.type = this.getType();\n        this.filterData.name = this.nameFilter;\n        this.filterData.address = this.addressFilter;\n\n        if (this.availabilityInterval != null) {\n          this.filterData.start = this.availabilityInterval[0].toISOString();\n\n          if (this.availabilityInterval[1] != null) {\n            this.filterData.end = this.availabilityInterval[1].toISOString();\n          } else {\n            this.filterData.end = null;\n            this.filterData.start = null;\n          }\n        } else {\n          this.filterData.start = null;\n          this.filterData.end = null;\n        }\n\n        this.filterData.people = this.people;\n        this.filterData.priceMin = this.price[0];\n        this.filterData.priceMax = this.price[1];\n        this.displayType = this.toDisplay;\n        this.currentPage = 0;\n      }\n\n      const url = this.generateUrl();\n      axios.get(url).then(response => {\n        if (response.data.length == 0) {\n          if (fromButton) {\n            this.$toast.error(\"No results found\");\n          }\n\n          if (!fromButton) {\n            this.currentPage = this.currentPage - 1;\n          }\n        } else {\n          this.entities = response.data;\n          this.displayCurrentPage = this.currentPage;\n        }\n      });\n    },\n\n    dateFromLocal(dateString) {\n      if (dateString == null) {\n        return new Date();\n      }\n\n      const parts = dateString.split(\" \");\n\n      if (parts.length != 2) {\n        return new Date();\n      }\n\n      const dateParts = parts[0].split(\".\");\n\n      if (dateParts.length != 3) {\n        return new Date();\n      }\n\n      const hourParts = parts[1].split(\":\");\n\n      if (hourParts.length != 2) {\n        return new Date();\n      }\n\n      const day = dateParts[0];\n      const month = dateParts[1];\n      const year = dateParts[2];\n      const hours = hourParts[0];\n      const minutes = hourParts[1]; // new Date(year, month, day, hours, minutes, seconds, milliseconds)\n\n      const date = new Date(year, month - 1, day, hours, minutes);\n      return date;\n    },\n\n    jumpToPreview(entity) {\n      this.selectEntity(entity);\n      this.$router.push({\n        name: \"rentingEntityPreview\",\n        params: {\n          id: this.selectedEntity.id,\n          displayType: this.displayType\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","Slider","name","components","data","publicPath","process","env","BASE_URL","entities","selectedEntity","selectedRows","people","currentPage","displayCurrentPage","maximumPage","groupBy","price","availabilityInterval","filterData","sortType","nameFilter","addressFilter","selected","toDisplay","displayType","mounted","get","then","response","methods","formatRange","dates","from","to","Date","dayFrom","getDate","monthFrom","getMonth","yearFrom","getFullYear","hourFrom","getHours","minuteFrom","getMinutes","dayTo","monthTo","yearTo","hourTo","minuteTo","selectEntity","entity","previousPage","search","nextPage","generateUrl","url","type","address","start","end","priceMin","priceMax","getSortType","getType","fromButton","toISOString","length","$toast","error","dateFromLocal","dateString","parts","split","dateParts","hourParts","day","month","year","hours","minutes","date","jumpToPreview","$router","push","params","id"],"sourceRoot":"","sources":["C:\\Users\\draga\\OneDrive\\Dokumenti\\MRS-ISA-PROJEKAT\\mrs-isa-projekat\\projekat\\src\\frontend\\src\\components\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-container\">\r\n    <div class=\"left-bar\">\r\n      <h5 style=\"color: white; font-weight: bold\">Search</h5>\r\n      <div class=\"left-bar-text\" style=\"margin-top: 0\">Destination name:</div>\r\n      <div>\r\n        <input class=\"input-group-text\" type=\"text\" v-model=\"nameFilter\"/>\r\n      </div>\r\n      <div class=\"left-bar-text\">Destination address:</div>\r\n      <div>\r\n        <input class=\"input-group-text\" type=\"text\"  v-model=\"addressFilter\"/>\r\n      </div>\r\n      <div class=\"left-bar-text\">Date:</div>\r\n      <Datepicker v-model=\"availabilityInterval\" :format=\"formatRange\" range clearable/>\r\n      <div class=\"left-bar-text\">People:</div>\r\n      <input type=\"number\" class=\"input-group-text\" style=\"text-align: left\" :min=0 :max=50 :step=1 v-model=\"people\"/><br>\r\n      <Slider style=\"width: 95%; margin: auto\" v-model=\"people\" :min=0 :max=50 :width=100 :step=1 :tooltips=false />\r\n      <div class=\"left-bar-text\">Price &euro;:</div>\r\n      <div style=\"display: block; align-content: space-between; text-align: center; min-height: 38px\">\r\n      <input class=\"input-group-text\" style=\"width: 45%; float: left\" type=\"number\"  :min=0 :max=price[1] :step=50  v-model=\"price[0]\"/>\r\n      <label style=\"color:white; margin-top: 5px\">-</label>\r\n      <input class=\"input-group-text\" style=\"width: 45%; float: right\" type=\"number\" :min=price[0] :max=1000 :step=50 v-model=\"price[1]\"/>\r\n      </div><br>\r\n      <Slider style=\"width: 95%; margin: auto\" v-model=\"price\" :min=0 :max=1000 :width=100 :step=50 :tooltips=false />\r\n      <div class=\"left-bar-text\">Sort by:</div>\r\n      <div class=\"sort\">\r\n        <select class=\"form-select\" v-model=\"sortType\" name=\"example\">\r\n          <option value=0>Name descending</option>\r\n          <option value=1>Name ascending</option>\r\n          <option value=2>Price descending</option>\r\n          <option value=3>Price ascending</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"sort\" >\r\n          <div class=\"left-bar-text\">Group by:</div> \r\n          <select class=\"form-select\" v-model=\"groupBy\">\r\n            <option value=1>1</option>\r\n            <option value=5>5</option>\r\n            <option value=10>10</option>\r\n            <option value=15>15</option>\r\n          </select>\r\n        </div>\r\n      <br>\r\n      <div class=\"radio-div\">\r\n        <div>\r\n          <input class=\"radio\" type=\"radio\" id=\"contactChoice1\" name=\"choice\" value=0 v-model=\"toDisplay\">\r\n          <label class=\"custom-btn button-primary\" for=\"contactChoice1\">Houses</label>\r\n        </div>\r\n        <div>\r\n          <input class=\"radio\" type=\"radio\" id=\"contactChoice2\" name=\"choice\" value=1 v-model=\"toDisplay\">\r\n          <label class=\"custom-btn button-primary\" for=\"contactChoice2\">Boats</label>\r\n        </div>\r\n        <div>\r\n          <input class=\"radio\" type=\"radio\" id=\"contactChoice3\" name=\"choice\" value=2 v-model=\"toDisplay\">\r\n          <label class=\"custom-btn button-primary\" for=\"contactChoice3\">Fishing classes </label>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button style=\"margin-bottom: 7px\" class=\"custom-btn button-secondary\" @click=\"search(true)\">Search</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"home-entities-div\">\r\n      <div >\r\n        <div class=\"list-entities\" v-for=\"(vacationHouse, index) in this.entities\" @Click=\"selectEntity(vacationHouse)\"\r\n            v-bind:index=\"index\" :key=\"vacationHouse.id\" v-bind=\"{selected: selectedEntity.id===vacationHouse.id}\">\r\n          <div class=\"entity-picture\"><img v-bind:src=\"'data:image/jpeg;base64,' + vacationHouse.img\" @click=\"jumpToPreview(vacationHouse)\" style=\"width: 200px; height: 150px; cursor: pointer\"></div>\r\n          <div class=\"entity-name\"><h4 @click=\"jumpToPreview(vacationHouse)\" style=\"font-weight: bold; cursor: pointer\">{{ vacationHouse.name }}</h4>\r\n            <div class=\"entity-description\"><i class=\"bi bi-geo-alt-fill\"></i> <b>{{ vacationHouse.address }}</b> </div>\r\n            <div class=\"entity-description\">{{ vacationHouse.promoDescription }}</div>\r\n            <vue3-star-ratings class=\"star-ratings\" v-model=\"vacationHouse.rating\" starSize=\"15\"  :showControl=false :disableClick=true :step=0 />\r\n            <span style=\"color: #585858;\">({{vacationHouse.reviewsNumber}})</span>\r\n          </div>\r\n          <div class=\"entity-price\">\r\n            <div><h5 style=\"font-weight: bold\">{{ vacationHouse.priceList }}&euro;</h5></div>\r\n            <div>\r\n              <button class=\"custom-btn button-primary\" @click=\"jumpToPreview(vacationHouse)\">Explore</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style=\"text-align: center\">\r\n        <button class=\"btn btn-light\" @click=\"previousPage()\">Prev</button>\r\n        {{displayCurrentPage}}\r\n        <button class=\"btn btn-light\"  @click=\"nextPage()\">Next</button>\r\n      </div>\r\n      <br><br><br><br><br><br>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\"\r\nimport Slider from '@vueform/slider'\r\nexport default {\r\n\r\n  name: \"HomePage\",\r\n  components: {\r\n      Slider,\r\n    },\r\n  data() {\r\n    return {\r\n      publicPath: process.env.BASE_URL,\r\n      entities: [],\r\n      selectedEntity: {},\r\n      selectedRows: [],\r\n      people:0,\r\n      currentPage:0,\r\n      displayCurrentPage:0,\r\n      maximumPage:null,\r\n      groupBy:5,\r\n      price:[0,1000],\r\n      availabilityInterval: null,\r\n      filterData:{\r\n        \"type\":\"vacationHouses\",\r\n        \"name\":\"\",\r\n        \"address\":\"\",\r\n        \"start\":null,\r\n        \"end\":null,\r\n        \"people\":0,\r\n        \"priceMin\":0,\r\n        \"priceMax\":100\r\n      },\r\n      sortType: 0, //represents type of sort, 0 name desc, 1 name asc, 2 price asc, 3 price desc\r\n      nameFilter: \"\",\r\n      addressFilter:\"\",\r\n      selected: false,\r\n      toDisplay:0,\r\n      displayType: 0,  //represents type of renting entity, 0 vac houses, 1 ships , 2 fishing classes\r\n    }\r\n  }\r\n  ,\r\n  mounted() {\r\n    // const name=\"\";\r\n    // const address=\"\";\r\n    // const start=new Date(2022,3,1,23,0);\r\n    // const end=new Date(2022,7,8,15,0);\r\n    // const people=8;\r\n    // const priceMin=40;\r\n    // const priceMax=800;\r\n    // console.log(start.toISOString());\r\n    // console.log(end.toISOString());\r\n    axios.get(`/api/vacationHouses/anyUser/?page=${this.currentPage}&size=5&sort=name,ASC`).then(response => this.entities=response.data);\r\n    //axios.get(\"api/fishingClasses/all\").then(response => this.fishingClasses = response.data);\r\n    //axios.get(\"api/ships/all\").then(response => this.ships = response.data);\r\n\r\n  },\r\n  \r\n  methods: {       \r\n\r\n    formatRange(dates){\r\n      let from = dates[0];\r\n      let to = dates[1];\r\n      if(from==null){\r\n        from=new Date()\r\n      }\r\n      const dayFrom = from.getDate();\r\n      const monthFrom = from.getMonth() + 1;\r\n      const yearFrom = from.getFullYear();\r\n      const hourFrom = from.getHours();\r\n      const minuteFrom = from.getMinutes();\r\n\r\n      if(to==null){\r\n        to=new Date()\r\n      }\r\n      const dayTo = to.getDate();\r\n      const monthTo = to.getMonth() + 1;\r\n      const yearTo = to.getFullYear();\r\n      const hourTo = to.getHours();\r\n      const minuteTo = to.getMinutes();\r\n\r\n      return `${dayFrom}.${monthFrom}.${yearFrom} ${hourFrom}:${minuteFrom} - ${dayTo}.${monthTo}.${yearTo} ${hourTo}:${minuteTo}`\r\n    },\r\n    selectEntity(entity) {\r\n\r\n      this.selectedEntity = entity;\r\n      this.selected = true;\r\n\r\n    },\r\n    previousPage(){\r\n      if((this.currentPage-1)<=0){\r\n        this.currentPage=0;\r\n      }else{\r\n        this.currentPage=this.currentPage-1;\r\n      }\r\n      this.search(false);\r\n    },\r\n    nextPage(){\r\n      this.currentPage=this.currentPage+1;\r\n      this.search(false);\r\n    },\r\n    generateUrl(){\r\n        let url=\"api/\"+this.filterData.type+\"/anyUser/?\";\r\n        if(this.filterData.name!=\"\"){\r\n          url=url+\"&name=\"+this.filterData.name;\r\n        }\r\n        if(this.filterData.address!=\"\"){\r\n          url=url+\"&address=\"+this.filterData.address;\r\n        }\r\n        if(this.filterData.start!=null){\r\n          url=url+\"&start=\"+this.filterData.start;\r\n        }\r\n\r\n        if(this.filterData.end!=null){\r\n          url=url+\"&end=\"+this.filterData.end;\r\n        }\r\n\r\n        url=url+\"&people=\"+this.filterData.people\r\n        +\"&priceMin=\"+this.filterData.priceMin+\"&priceMax=\"+this.filterData.priceMax+\"&page=\"+this.currentPage+\"&size=\"+this.groupBy+\r\n        this.getSortType();\r\n\r\n        return url;\r\n    },\r\n    \r\n    getSortType(){\r\n      //0 name desc, 1 name asc, 2 price asc, 3 price desc\r\n      //\"&sort=name,ASC\"\r\n      if(this.sortType==0){\r\n        return \"&sort=name,DESC\";\r\n      }\r\n      else if(this.sortType==1){\r\n        return \"&sort=name,ASC\";\r\n      }else if(this.sortType==3){\r\n        return \"&sort=priceList,ASC\";\r\n      }else{\r\n        return \"&sort=priceList,DESC\";\r\n      }\r\n    },\r\n    getType(){\r\n      if(this.toDisplay==0){\r\n        return \"vacationHouses\";\r\n      }else if(this.toDisplay==1){\r\n        return \"ships\";\r\n      }else{\r\n        return \"fishingClasses\";\r\n      }\r\n    },\r\n    search(fromButton){\r\n      if(fromButton){\r\n        this.filterData.type=this.getType();\r\n        this.filterData.name=this.nameFilter;\r\n        this.filterData.address=this.addressFilter;\r\n        if(this.availabilityInterval != null){\r\n          this.filterData.start=this.availabilityInterval[0].toISOString();\r\n          if(this.availabilityInterval[1]!=null){\r\n            this.filterData.end=this.availabilityInterval[1].toISOString();\r\n          }else{\r\n            this.filterData.end=null;\r\n            this.filterData.start=null;\r\n          }\r\n        }else{\r\n          this.filterData.start=null;\r\n          this.filterData.end=null;\r\n        }\r\n\r\n        this.filterData.people=this.people;\r\n        this.filterData.priceMin=this.price[0];\r\n        this.filterData.priceMax=this.price[1];\r\n        this.displayType=this.toDisplay;\r\n        this.currentPage=0;\r\n      }\r\n      const url=this.generateUrl();\r\n   \r\n      axios.get(url).then(response => {\r\n        \r\n        if(response.data.length==0){\r\n          if(fromButton){\r\n            this.$toast.error(\"No results found\");\r\n          }\r\n          if(!fromButton){\r\n          this.currentPage=this.currentPage-1; \r\n          }\r\n         \r\n        }else{\r\n          this.entities=response.data;\r\n          this.displayCurrentPage=this.currentPage;\r\n        }\r\n        });\r\n    },\r\n    dateFromLocal(dateString){\r\n      if(dateString==null){\r\n        return new Date();\r\n      }\r\n      \r\n      const parts=dateString.split(\" \");\r\n      \r\n      if( parts.length !=2){\r\n        return new Date();\r\n      }\r\n      const dateParts= parts[0].split(\".\");\r\n      \r\n      if( dateParts.length !=3){\r\n        return new Date();\r\n      }\r\n      const hourParts=parts[1].split(\":\");\r\n      \r\n      if( hourParts.length !=2){\r\n        return new Date();\r\n      }\r\n      \r\n      const day = dateParts[0];\r\n      const month = dateParts[1];\r\n      const year = dateParts[2];\r\n      const hours = hourParts[0];\r\n      const minutes = hourParts[1];\r\n      // new Date(year, month, day, hours, minutes, seconds, milliseconds)\r\n      const date= new Date(year,month-1,day,hours,minutes);\r\n      return date;\r\n    },\r\n    \r\n   \r\n    jumpToPreview(entity) {\r\n      this.selectEntity(entity);\r\n      this.$router.push({\r\n        name: \"rentingEntityPreview\",\r\n        params: {id: this.selectedEntity.id, displayType: this.displayType}\r\n      });\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n.input-group-text {\r\n  width: 100%;\r\n  margin: auto;\r\n}\r\n\r\n.list-entities {\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 170px;\r\n  border: 1px solid darkgrey;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.datepicker-sort select {\r\n  margin-left: 30px;\r\n  width: 200px;\r\n}\r\n\r\n.entity-picture img {\r\n  object-fit: cover;\r\n  margin: 10px;\r\n  border-radius: 5px;\r\n  width: 200px;\r\n  height: 150px;\r\n}\r\n\r\n.entity-picture {\r\n  float:left;\r\n}\r\n\r\n.entity-name {\r\n  float: left;\r\n  margin: 10px;\r\n  text-align: left;\r\n}\r\n\r\n.entity-description {\r\n  color: #585858;\r\n  max-width: 280px;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n}\r\n\r\n.entity-price {\r\n  float: right;\r\n  margin: 50px 30px 0 0;\r\n  min-width: 150px;\r\n}\r\n\r\n.radio {\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n.button-primary, .button-secondary {\r\n  cursor: pointer;\r\n  width: 100%;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n[type=radio]:checked + label {\r\n  background-color: #004661;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}