{"ast":null,"code":"import { render, h } from 'vue';\n\nconst createElement = () => typeof document !== 'undefined' && document.createElement('div');\n\nconst mount = (component, {\n  props,\n  children,\n  element,\n  app\n} = {}) => {\n  let el = element ? element : createElement();\n  let vNode = h(component, props, children);\n\n  if (app && app._context) {\n    vNode.appContext = app._context;\n  }\n\n  render(vNode, el);\n\n  const destroy = () => {\n    if (el) {\n      render(null, el);\n    }\n\n    el = null;\n    vNode = null;\n  };\n\n  return {\n    vNode,\n    destroy,\n    el\n  };\n};\n\nexport default mount;","map":{"version":3,"sources":["C:/Users/draga/OneDrive/Dokumenti/MRS-ISA-PROJEKAT/mrs-isa-projekat/projekat/src/frontend/node_modules/@meforma/vue-toaster/src/helpers/mount-component.js"],"names":["render","h","createElement","document","mount","component","props","children","element","app","el","vNode","_context","appContext","destroy"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,CAAjB,QAA0B,KAA1B;;AAEA,MAAMC,aAAa,GAAG,MACpB,OAAOC,QAAP,KAAoB,WAApB,IAAmCA,QAAQ,CAACD,aAAT,CAAuB,KAAvB,CADrC;;AAGA,MAAME,KAAK,GAAG,CAACC,SAAD,EAAY;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,OAAnB;AAA4BC,EAAAA;AAA5B,IAAoC,EAAhD,KAAuD;AACnE,MAAIC,EAAE,GAAGF,OAAO,GAAGA,OAAH,GAAaN,aAAa,EAA1C;AAEA,MAAIS,KAAK,GAAGV,CAAC,CAACI,SAAD,EAAYC,KAAZ,EAAmBC,QAAnB,CAAb;;AACA,MAAIE,GAAG,IAAIA,GAAG,CAACG,QAAf,EAAyB;AACvBD,IAAAA,KAAK,CAACE,UAAN,GAAmBJ,GAAG,CAACG,QAAvB;AACD;;AAEDZ,EAAAA,MAAM,CAACW,KAAD,EAAQD,EAAR,CAAN;;AAEA,QAAMI,OAAO,GAAG,MAAM;AACpB,QAAIJ,EAAJ,EAAQ;AACNV,MAAAA,MAAM,CAAC,IAAD,EAAOU,EAAP,CAAN;AACD;;AACDA,IAAAA,EAAE,GAAG,IAAL;AACAC,IAAAA,KAAK,GAAG,IAAR;AACD,GAND;;AAQA,SAAO;AAAEA,IAAAA,KAAF;AAASG,IAAAA,OAAT;AAAkBJ,IAAAA;AAAlB,GAAP;AACD,CAnBD;;AAqBA,eAAeN,KAAf","sourcesContent":["import { render, h } from 'vue'\n\nconst createElement = () =>\n  typeof document !== 'undefined' && document.createElement('div')\n\nconst mount = (component, { props, children, element, app } = {}) => {\n  let el = element ? element : createElement()\n\n  let vNode = h(component, props, children)\n  if (app && app._context) {\n    vNode.appContext = app._context\n  }\n\n  render(vNode, el)\n\n  const destroy = () => {\n    if (el) {\n      render(null, el)\n    }\n    el = null\n    vNode = null\n  }\n\n  return { vNode, destroy, el }\n}\n\nexport default mount\n"]},"metadata":{},"sourceType":"module"}