{"ast":null,"code":"import Toaster from './Toaster.vue';\nimport eventBus from './helpers/event-bus.js';\nimport mount from './helpers/mount-component';\n\nconst Api = (globalOptions = {}) => {\n  return {\n    show(message, options = {}) {\n      let localOptions = {\n        message,\n        ...options\n      };\n      const c = mount(Toaster, {\n        props: { ...globalOptions,\n          ...localOptions\n        }\n      });\n      return c;\n    },\n\n    clear() {\n      eventBus.$emit('toast-clear');\n    },\n\n    success(message, options = {}) {\n      options.type = 'success';\n      return this.show(message, options);\n    },\n\n    error(message, options = {}) {\n      options.type = 'error';\n      return this.show(message, options);\n    },\n\n    info(message, options = {}) {\n      options.type = 'info';\n      return this.show(message, options);\n    },\n\n    warning(message, options = {}) {\n      options.type = 'warning';\n      return this.show(message, options);\n    }\n\n  };\n};\n\nexport default Api;","map":{"version":3,"sources":["C:/Users/draga/OneDrive/Dokumenti/MRS-ISA-PROJEKAT/mrs-isa-projekat/projekat/src/frontend/node_modules/@meforma/vue-toaster/src/api.js"],"names":["Toaster","eventBus","mount","Api","globalOptions","show","message","options","localOptions","c","props","clear","$emit","success","type","error","info","warning"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;AAEA,MAAMC,GAAG,GAAG,CAACC,aAAa,GAAG,EAAjB,KAAwB;AAClC,SAAO;AACLC,IAAAA,IAAI,CAACC,OAAD,EAAUC,OAAO,GAAG,EAApB,EAAwB;AAC1B,UAAIC,YAAY,GAAG;AAAEF,QAAAA,OAAF;AAAW,WAAGC;AAAd,OAAnB;AACA,YAAME,CAAC,GAAGP,KAAK,CAACF,OAAD,EAAU;AACvBU,QAAAA,KAAK,EAAE,EAAE,GAAGN,aAAL;AAAoB,aAAGI;AAAvB;AADgB,OAAV,CAAf;AAGA,aAAOC,CAAP;AACD,KAPI;;AAQLE,IAAAA,KAAK,GAAG;AACNV,MAAAA,QAAQ,CAACW,KAAT,CAAe,aAAf;AACD,KAVI;;AAWLC,IAAAA,OAAO,CAACP,OAAD,EAAUC,OAAO,GAAG,EAApB,EAAwB;AAC7BA,MAAAA,OAAO,CAACO,IAAR,GAAe,SAAf;AACA,aAAO,KAAKT,IAAL,CAAUC,OAAV,EAAmBC,OAAnB,CAAP;AACD,KAdI;;AAeLQ,IAAAA,KAAK,CAACT,OAAD,EAAUC,OAAO,GAAG,EAApB,EAAwB;AAC3BA,MAAAA,OAAO,CAACO,IAAR,GAAe,OAAf;AACA,aAAO,KAAKT,IAAL,CAAUC,OAAV,EAAmBC,OAAnB,CAAP;AACD,KAlBI;;AAmBLS,IAAAA,IAAI,CAACV,OAAD,EAAUC,OAAO,GAAG,EAApB,EAAwB;AAC1BA,MAAAA,OAAO,CAACO,IAAR,GAAe,MAAf;AACA,aAAO,KAAKT,IAAL,CAAUC,OAAV,EAAmBC,OAAnB,CAAP;AACD,KAtBI;;AAuBLU,IAAAA,OAAO,CAACX,OAAD,EAAUC,OAAO,GAAG,EAApB,EAAwB;AAC7BA,MAAAA,OAAO,CAACO,IAAR,GAAe,SAAf;AACA,aAAO,KAAKT,IAAL,CAAUC,OAAV,EAAmBC,OAAnB,CAAP;AACD;;AA1BI,GAAP;AA4BD,CA7BD;;AA+BA,eAAeJ,GAAf","sourcesContent":["import Toaster from './Toaster.vue'\nimport eventBus from './helpers/event-bus.js'\nimport mount from './helpers/mount-component'\n\nconst Api = (globalOptions = {}) => {\n  return {\n    show(message, options = {}) {\n      let localOptions = { message, ...options }\n      const c = mount(Toaster, {\n        props: { ...globalOptions, ...localOptions }\n      })\n      return c\n    },\n    clear() {\n      eventBus.$emit('toast-clear')\n    },\n    success(message, options = {}) {\n      options.type = 'success'\n      return this.show(message, options)\n    },\n    error(message, options = {}) {\n      options.type = 'error'\n      return this.show(message, options)\n    },\n    info(message, options = {}) {\n      options.type = 'info'\n      return this.show(message, options)\n    },\n    warning(message, options = {}) {\n      options.type = 'warning'\n      return this.show(message, options)\n    }\n  }\n}\n\nexport default Api\n"]},"metadata":{},"sourceType":"module"}