{"ast":null,"code":"class Event {\n  constructor() {\n    this.queue = {};\n  }\n\n  $on(name, callback) {\n    this.queue[name] = this.queue[name] || [];\n    this.queue[name].push(callback);\n  }\n\n  $off(name, callback) {\n    if (this.queue[name]) {\n      for (var i = 0; i < this.queue[name].length; i++) {\n        if (this.queue[name][i] === callback) {\n          this.queue[name].splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  $emit(name, data) {\n    if (this.queue[name]) {\n      this.queue[name].forEach(function (callback) {\n        callback(data);\n      });\n    }\n  }\n\n}\n\nexport default new Event();","map":{"version":3,"sources":["C:/Users/draga/OneDrive/Dokumenti/MRS-ISA-PROJEKAT/mrs-isa-projekat/projekat/src/frontend/node_modules/@meforma/vue-toaster/src/helpers/event-bus.js"],"names":["Event","constructor","queue","$on","name","callback","push","$off","i","length","splice","$emit","data","forEach"],"mappings":"AAAA,MAAMA,KAAN,CAAY;AACVC,EAAAA,WAAW,GAAG;AACZ,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,GAAG,CAACC,IAAD,EAAOC,QAAP,EAAiB;AAClB,SAAKH,KAAL,CAAWE,IAAX,IAAmB,KAAKF,KAAL,CAAWE,IAAX,KAAoB,EAAvC;AACA,SAAKF,KAAL,CAAWE,IAAX,EAAiBE,IAAjB,CAAsBD,QAAtB;AACD;;AAEDE,EAAAA,IAAI,CAACH,IAAD,EAAOC,QAAP,EAAiB;AACnB,QAAI,KAAKH,KAAL,CAAWE,IAAX,CAAJ,EAAsB;AACpB,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKN,KAAL,CAAWE,IAAX,EAAiBK,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAChD,YAAI,KAAKN,KAAL,CAAWE,IAAX,EAAiBI,CAAjB,MAAwBH,QAA5B,EAAsC;AACpC,eAAKH,KAAL,CAAWE,IAAX,EAAiBM,MAAjB,CAAwBF,CAAxB,EAA2B,CAA3B;AACA;AACD;AACF;AACF;AACF;;AAEDG,EAAAA,KAAK,CAACP,IAAD,EAAOQ,IAAP,EAAa;AAChB,QAAI,KAAKV,KAAL,CAAWE,IAAX,CAAJ,EAAsB;AACpB,WAAKF,KAAL,CAAWE,IAAX,EAAiBS,OAAjB,CAAyB,UAAUR,QAAV,EAAoB;AAC3CA,QAAAA,QAAQ,CAACO,IAAD,CAAR;AACD,OAFD;AAGD;AACF;;AA3BS;;AA8BZ,eAAe,IAAIZ,KAAJ,EAAf","sourcesContent":["class Event {\n  constructor() {\n    this.queue = {}\n  }\n\n  $on(name, callback) {\n    this.queue[name] = this.queue[name] || []\n    this.queue[name].push(callback)\n  }\n\n  $off(name, callback) {\n    if (this.queue[name]) {\n      for (var i = 0; i < this.queue[name].length; i++) {\n        if (this.queue[name][i] === callback) {\n          this.queue[name].splice(i, 1)\n          break\n        }\n      }\n    }\n  }\n\n  $emit(name, data) {\n    if (this.queue[name]) {\n      this.queue[name].forEach(function (callback) {\n        callback(data)\n      })\n    }\n  }\n}\n\nexport default new Event()\n"]},"metadata":{},"sourceType":"module"}